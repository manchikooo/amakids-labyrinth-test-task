{"ast":null,"code":"var _jsxFileName = \"/Users/manchiko/amakids-labyrinth-test-task/src/components/Matrix/Matrix.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MatrixBlock, MatrixColumn, MatrixRow, MatrixWrapper } from \"./MatrixStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createMatrixAC, setMatrixSizeAC, setStartCoordinatesAC } from \"../../state/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Matrix = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [movesArr, setMovesArr] = useState([]);\n  const matrix = useSelector(state => state.matrix.matrix);\n  const matrixSize = useSelector(state => state.matrix.matrixSize);\n  const startCoordinates = useSelector(state => state.matrix.startPoint);\n  const endCoordinates = useSelector(state => state.matrix.endPoint);\n  console.log('END ', endCoordinates); // console.log('START ', startCoordinates)\n\n  const matrixSizeHandler = e => {\n    dispatch(setMatrixSizeAC(Number(e.currentTarget.value)));\n  };\n\n  const matrixStart = matrixSize => {\n    dispatch(setStartCoordinatesAC(matrixSize));\n    matrixMove();\n  };\n\n  const matrixMove = function () {\n    let moves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n\n    // debugger\n    if (endCoordinates.row !== 0) {\n      console.log(endCoordinates.row);\n      console.log('1st if ', endCoordinates.row);\n      setMovesArr(moveArr => [...moveArr, 'moveUp']); // dispatch(moveUpAC())\n    }\n\n    if (endCoordinates.row !== matrix.length - 1) {\n      console.log('2st if ', endCoordinates.row);\n      setMovesArr(moveArr => [...moveArr, 'moveDown']); // dispatch(moveDownAC())\n    }\n\n    if (endCoordinates.column !== 0) {\n      console.log('3th if ', endCoordinates.column);\n      setMovesArr(moveArr => [...moveArr, 'moveLeft']); // dispatch(moveLeftAC())\n    }\n\n    if (endCoordinates.column !== matrix.length - 1) {\n      console.log('4th if ', endCoordinates.column);\n      setMovesArr(moveArr => [...moveArr, 'moveRight']); // dispatch(moveRightAC())\n    }\n  };\n\n  console.log(movesArr);\n  useEffect(() => {\n    dispatch(createMatrixAC(matrixSize));\n  }, [matrixSize]);\n  return /*#__PURE__*/_jsxDEV(MatrixWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: matrixSize,\n      onChange: matrixSizeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => matrixStart(matrixSize),\n      children: \"\\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatrixBlock, {\n      children: matrix.map((row, rowIndex) => {\n        return /*#__PURE__*/_jsxDEV(MatrixRow, {\n          children: matrix[rowIndex].map((column, columnIndex) => /*#__PURE__*/_jsxDEV(MatrixColumn, {\n            rowIndex: rowIndex,\n            startRow: startCoordinates.row,\n            endRow: endCoordinates.row,\n            startColumn: startCoordinates.column,\n            endColumn: endCoordinates.column,\n            columnIndex: columnIndex,\n            children: column\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Matrix, \"m6YLSopgThLirmJXDBBRpcvpHSA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Matrix;\n\nvar _c;\n\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useEffect","useState","MatrixBlock","MatrixColumn","MatrixRow","MatrixWrapper","useDispatch","useSelector","createMatrixAC","setMatrixSizeAC","setStartCoordinatesAC","Matrix","dispatch","movesArr","setMovesArr","matrix","state","matrixSize","startCoordinates","startPoint","endCoordinates","endPoint","console","log","matrixSizeHandler","e","Number","currentTarget","value","matrixStart","matrixMove","moves","row","moveArr","length","column","map","rowIndex","columnIndex"],"sources":["/Users/manchiko/amakids-labyrinth-test-task/src/components/Matrix/Matrix.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {MatrixBlock, MatrixColumn, MatrixRow, MatrixWrapper} from \"./MatrixStyles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../state/store\";\nimport {createMatrixAC, PointType, setMatrixSizeAC, setStartCoordinatesAC,} from \"../../state/reducer\";\n\nexport const Matrix = () => {\n    const dispatch = useDispatch()\n    const [movesArr, setMovesArr] = useState<Array<string>>([])\n    const matrix = useSelector<AppRootStateType, Array<Array<number>>>(state => state.matrix.matrix)\n    const matrixSize = useSelector<AppRootStateType, number>(state => state.matrix.matrixSize)\n    const startCoordinates = useSelector<AppRootStateType, PointType>(state => state.matrix.startPoint)\n    const endCoordinates = useSelector<AppRootStateType, PointType>(state => state.matrix.endPoint)\n    console.log('END ', endCoordinates)\n    // console.log('START ', startCoordinates)\n    const matrixSizeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setMatrixSizeAC(Number(e.currentTarget.value)))\n    }\n    const matrixStart = (matrixSize: number) => {\n        dispatch(setStartCoordinatesAC(matrixSize))\n        matrixMove()\n    }\n\n    const matrixMove = (moves: number = 5) => {\n        // debugger\n        if (endCoordinates.row !== 0) {\n            console.log(endCoordinates.row)\n            console.log('1st if ', endCoordinates.row)\n            setMovesArr(moveArr => ([...moveArr, 'moveUp']))\n            // dispatch(moveUpAC())\n        }\n        if (endCoordinates.row !== matrix.length - 1) {\n            console.log('2st if ', endCoordinates.row)\n            setMovesArr(moveArr => ([...moveArr, 'moveDown']))\n            // dispatch(moveDownAC())\n        }\n        if (endCoordinates.column !== 0) {\n            console.log('3th if ', endCoordinates.column)\n            setMovesArr(moveArr => ([...moveArr, 'moveLeft']))\n            // dispatch(moveLeftAC())\n        }\n        if (endCoordinates.column !== matrix.length - 1) {\n            console.log('4th if ', endCoordinates.column)\n            setMovesArr(moveArr => ([...moveArr, 'moveRight']))\n            // dispatch(moveRightAC())\n        }\n    }\n    console.log(movesArr)\n    useEffect(() => {\n        dispatch(createMatrixAC(matrixSize))\n    }, [matrixSize])\n\n    return (\n        <MatrixWrapper>\n            <input type='number'\n                   value={matrixSize}\n                   onChange={matrixSizeHandler}/>\n            <button onClick={() => matrixStart(matrixSize)}>начать игру</button>\n            <MatrixBlock>\n                {\n                    matrix.map((row, rowIndex) => {\n                        return <MatrixRow key={rowIndex}>\n                            {matrix[rowIndex].map((column, columnIndex) =>\n                                <MatrixColumn\n                                    rowIndex={rowIndex}\n                                    startRow={startCoordinates.row}\n                                    endRow={endCoordinates.row}\n                                    startColumn={startCoordinates.column}\n                                    endColumn={endCoordinates.column}\n                                    columnIndex={columnIndex}\n                                    key={columnIndex}\n                                >\n                                    {column}\n                                </MatrixColumn>)}\n                        </MatrixRow>\n                    })\n                }\n            </MatrixBlock>\n        </MatrixWrapper>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}