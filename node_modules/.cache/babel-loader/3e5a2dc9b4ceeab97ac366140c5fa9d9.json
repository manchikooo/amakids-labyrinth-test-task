{"ast":null,"code":"const initialState = {\n  matrix: [],\n  matrixSize: 3,\n  startPoint: {\n    row: -1,\n    column: -1\n  },\n  endPoint: {\n    row: -1,\n    column: -1\n  }\n};\nexport const matrixReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_MATRIX':\n      {\n        let matrix = [];\n\n        for (let i = 0; i < action.payload.tableSize; i++) {\n          matrix.push([]);\n\n          for (let j = 0; j < action.payload.tableSize; j++) {\n            matrix[i].push(j);\n          }\n        }\n\n        return { ...state,\n          matrix\n        };\n      }\n\n    case \"SET_START_COORDINATES\":\n      {\n        const row = Math.round(Math.random() * (action.payload.matrixSize - 1));\n        const column = Math.round(Math.random() * (action.payload.matrixSize - 1));\n        return { ...state,\n          startPoint: {\n            row,\n            column: column\n          },\n          endPoint: {\n            row,\n            column: column\n          }\n        };\n      }\n\n    case \"SET_MATRIX_SIZE\":\n      {\n        if (action.payload.size > 5) {\n          return { ...state,\n            matrixSize: 5\n          };\n        } else if (action.payload.size < 2) {\n          return { ...state,\n            matrixSize: 2\n          };\n        } else {\n          return { ...state,\n            matrixSize: action.payload.size\n          };\n        }\n      }\n\n    case \"MOVE_UP\":\n      {\n        return { ...state,\n          endPoint: {\n            row: state.endPoint.row - 1,\n            column: state.endPoint.column\n          }\n        };\n      }\n\n    case \"MOVE_DOWN\":\n      {\n        return { ...state,\n          endPoint: {\n            row: state.endPoint.row + 1,\n            column: state.endPoint.column\n          }\n        };\n      }\n\n    case \"MOVE_RIGHT\":\n      {\n        return { ...state,\n          endPoint: {\n            row: state.endPoint.row,\n            column: state.endPoint.column + 1\n          }\n        };\n      }\n\n    case \"MOVE_LEFT\":\n      {\n        return { ...state,\n          endPoint: {\n            row: state.endPoint.row,\n            column: state.endPoint.column - 1\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const createMatrixAC = tableSize => {\n  return {\n    type: 'CREATE_MATRIX',\n    payload: {\n      tableSize\n    }\n  };\n};\nexport const setMatrixSizeAC = size => {\n  return {\n    type: 'SET_MATRIX_SIZE',\n    payload: {\n      size\n    }\n  };\n};\nexport const setStartCoordinatesAC = matrixSize => {\n  return {\n    type: 'SET_START_COORDINATES',\n    payload: {\n      matrixSize\n    }\n  };\n};\nexport const moveUpAC = () => {\n  return {\n    type: 'MOVE_UP'\n  };\n};\nexport const moveDownAC = () => {\n  return {\n    type: 'MOVE_DOWN'\n  };\n};\nexport const moveRightAC = () => {\n  return {\n    type: 'MOVE_RIGHT'\n  };\n};\nexport const moveLeftAC = () => {\n  return {\n    type: 'MOVE_LEFT'\n  };\n};","map":{"version":3,"names":["initialState","matrix","matrixSize","startPoint","row","column","endPoint","matrixReducer","state","action","type","i","payload","tableSize","push","j","Math","round","random","size","createMatrixAC","setMatrixSizeAC","setStartCoordinatesAC","moveUpAC","moveDownAC","moveRightAC","moveLeftAC"],"sources":["/Users/manchiko/amakids-labyrinth-test-task/src/state/reducer.ts"],"sourcesContent":["type MatrixType = Array<MatrixRowType>\n\ntype MatrixRowType = Array<number>\n\nexport type PointType = {\n    row: number\n    column: number\n}\n\ntype InitialStateType = {\n    matrix: MatrixType\n    matrixSize: number\n    startPoint: PointType\n    endPoint: PointType\n}\n\nconst initialState: InitialStateType = {\n    matrix: [],\n    matrixSize: 3,\n    startPoint: {\n        row: -1,\n        column: -1\n    },\n    endPoint: {\n        row: -1,\n        column: -1\n    }\n}\n\nexport const matrixReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'CREATE_MATRIX': {\n            let matrix: Array<Array<number>> = []\n            for (let i = 0; i < action.payload.tableSize; i++) {\n                matrix.push([])\n                for (let j = 0; j < action.payload.tableSize; j++) {\n                    matrix[i].push(j)\n                }\n            }\n            return {...state, matrix}\n        }\n        case \"SET_START_COORDINATES\": {\n            const row = Math.round(Math.random() * (action.payload.matrixSize - 1))\n            const column = Math.round(Math.random() * (action.payload.matrixSize - 1))\n            return {...state, startPoint: {row, column: column}, endPoint: {row, column: column}}\n        }\n        case \"SET_MATRIX_SIZE\": {\n            if (action.payload.size > 5) {\n                return {...state, matrixSize: 5}\n            } else if (action.payload.size < 2) {\n                return {...state, matrixSize: 2}\n            } else {\n                return {...state, matrixSize: action.payload.size}\n            }\n        }\n        case \"MOVE_UP\": {\n            return {\n                ...state, endPoint: {\n                    row: state.endPoint.row - 1,\n                    column: state.endPoint.column\n                }\n            }\n        }\n        case \"MOVE_DOWN\": {\n            return {\n                ...state, endPoint: {\n                    row: state.endPoint.row + 1,\n                    column: state.endPoint.column\n                }\n            }\n        }\n        case \"MOVE_RIGHT\": {\n            return {\n                ...state, endPoint: {\n                    row: state.endPoint.row,\n                    column: state.endPoint.column + 1\n                }\n            }\n        }\n        case \"MOVE_LEFT\": {\n            return {\n                ...state, endPoint: {\n                    row: state.endPoint.row,\n                    column: state.endPoint.column - 1\n                }\n            }\n        }\n        default:\n            return state;\n    }\n}\n\ntype ActionsType =\n    CreateMatrixACType\n    | SetStartCoordinatesACType\n    | SetMatrixSizeACType\n    | MoveUpACType\n    | MoveDownACType\n    | MoveRightACType\n    | MoveLeftACType\n\ntype CreateMatrixACType = ReturnType<typeof createMatrixAC>\nexport const createMatrixAC = (tableSize: number) => {\n    return {\n        type: 'CREATE_MATRIX',\n        payload: {\n            tableSize\n        }\n    } as const\n}\ntype SetMatrixSizeACType = ReturnType<typeof setMatrixSizeAC>\nexport const setMatrixSizeAC = (size: number) => {\n    return {\n        type: 'SET_MATRIX_SIZE',\n        payload: {\n            size\n        }\n    } as const\n}\n\ntype SetStartCoordinatesACType = ReturnType<typeof setStartCoordinatesAC>\nexport const setStartCoordinatesAC = (matrixSize: number) => {\n    return {\n        type: 'SET_START_COORDINATES',\n        payload: {\n            matrixSize\n        }\n    } as const\n}\n\ntype MoveUpACType = ReturnType<typeof moveUpAC>\nexport const moveUpAC = () => {\n    return {\n        type: 'MOVE_UP'\n    } as const\n}\ntype MoveDownACType = ReturnType<typeof moveDownAC>\nexport const moveDownAC = () => {\n    return {\n        type: 'MOVE_DOWN'\n    } as const\n}\ntype MoveRightACType = ReturnType<typeof moveRightAC>\nexport const moveRightAC = () => {\n    return {\n        type: 'MOVE_RIGHT'\n    } as const\n}\ntype MoveLeftACType = ReturnType<typeof moveLeftAC>\nexport const moveLeftAC = () => {\n    return {\n        type: 'MOVE_LEFT'\n    } as const\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}