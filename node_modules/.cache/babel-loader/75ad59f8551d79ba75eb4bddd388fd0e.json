{"ast":null,"code":"const initialState = {\n  matrix: [],\n  matrixSize: 3,\n  startPoint: {\n    dir: '',\n    row: -1,\n    column: -1\n  },\n  endPoint: {\n    dir: '',\n    row: -1,\n    column: -1\n  },\n  possibleMoves: {\n    finalPoint: {\n      dir: '',\n      row: -1,\n      column: -1\n    }\n  } // {\n  //     finalPoint: {dir: '',\n  //         row: -1,\n  //         column: -1}'\n  // }\n\n};\nexport const matrixReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_MATRIX':\n      {\n        let matrix = [];\n\n        for (let i = 0; i < action.payload.tableSize; i++) {\n          matrix.push([]);\n\n          for (let j = 0; j < action.payload.tableSize; j++) {\n            matrix[i].push(j);\n          }\n        }\n\n        return { ...state,\n          matrix\n        };\n      }\n\n    case \"SET_START_COORDINATES\":\n      {\n        const row = Math.round(Math.random() * (action.payload.matrixSize - 1));\n        const column = Math.round(Math.random() * (action.payload.matrixSize - 1));\n        return { ...state,\n          startPoint: { ...state.startPoint,\n            row,\n            column\n          },\n          endPoint: { ...state.startPoint,\n            row,\n            column\n          }\n        };\n      }\n\n    case \"SET_MATRIX_SIZE\":\n      {\n        if (action.payload.size > 5) {\n          return { ...state,\n            matrixSize: 5\n          };\n        } else if (action.payload.size < 2) {\n          return { ...state,\n            matrixSize: 2\n          };\n        } else {\n          return { ...state,\n            matrixSize: action.payload.size\n          };\n        }\n      }\n\n    case \"GET_POSSIBLE_MOVES\":\n      {\n        return { ...state,\n          possibleMoves: {}\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const createMatrixAC = tableSize => {\n  return {\n    type: 'CREATE_MATRIX',\n    payload: {\n      tableSize\n    }\n  };\n};\nexport const setMatrixSizeAC = size => {\n  return {\n    type: 'SET_MATRIX_SIZE',\n    payload: {\n      size\n    }\n  };\n};\nexport const setStartCoordinatesAC = matrixSize => {\n  return {\n    type: 'SET_START_COORDINATES',\n    payload: {\n      matrixSize\n    }\n  };\n};\nexport const getPossibleMovesAC = possibleMoves => {\n  return {\n    type: 'GET_POSSIBLE_MOVES',\n    payload: {\n      possibleMoves\n    }\n  };\n};","map":{"version":3,"names":["initialState","matrix","matrixSize","startPoint","dir","row","column","endPoint","possibleMoves","finalPoint","matrixReducer","state","action","type","i","payload","tableSize","push","j","Math","round","random","size","createMatrixAC","setMatrixSizeAC","setStartCoordinatesAC","getPossibleMovesAC"],"sources":["/Users/manchiko/amakids-labyrinth-test-task/src/state/reducer.ts"],"sourcesContent":["export type MatrixType = Array<MatrixRowType>\n\nexport type PossibleMovesType = {\n    finalPoint: PointType\n}\n\ntype MatrixRowType = Array<number>\n\nexport type PointType = {\n    dir?: string | undefined\n    row: number\n    column: number\n}\n\ntype InitialStateType = {\n    matrix: MatrixType\n    matrixSize: number\n    startPoint: PointType\n    endPoint: PointType\n    possibleMoves: PossibleMovesType\n}\n\nconst initialState: InitialStateType = {\n    matrix: [],\n    matrixSize: 3,\n    startPoint: {\n        dir: '',\n        row: -1,\n        column: -1\n    },\n    endPoint: {\n        dir: '',\n        row: -1,\n        column: -1\n    },\n    possibleMoves: {\n        finalPoint: {\n            dir: '',\n            row: -1,\n            column: -1\n        }\n    }\n    // {\n    //     finalPoint: {dir: '',\n    //         row: -1,\n    //         column: -1}'\n    // }\n}\n\nexport const matrixReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'CREATE_MATRIX': {\n            let matrix: Array<Array<number>> = []\n            for (let i = 0; i < action.payload.tableSize; i++) {\n                matrix.push([])\n                for (let j = 0; j < action.payload.tableSize; j++) {\n                    matrix[i].push(j)\n                }\n            }\n            return {...state, matrix}\n        }\n        case \"SET_START_COORDINATES\": {\n            const row = Math.round(Math.random() * (action.payload.matrixSize - 1))\n            const column = Math.round(Math.random() * (action.payload.matrixSize - 1))\n            return {\n                ...state,\n                startPoint: {...state.startPoint, row, column},\n                endPoint: {...state.startPoint, row, column}\n            }\n        }\n        case \"SET_MATRIX_SIZE\": {\n            if (action.payload.size > 5) {\n                return {...state, matrixSize: 5}\n            } else if (action.payload.size < 2) {\n                return {...state, matrixSize: 2}\n            } else {\n                return {...state, matrixSize: action.payload.size}\n            }\n        }\n        case \"GET_POSSIBLE_MOVES\": {\n            return {...state, possibleMoves: {}}\n        }\n        default:\n            return state;\n    }\n}\n\ntype ActionsType =\n    CreateMatrixACType\n    | SetStartCoordinatesACType\n    | SetMatrixSizeACType\n    | GetPossibleMovesACType\n\ntype CreateMatrixACType = ReturnType<typeof createMatrixAC>\nexport const createMatrixAC = (tableSize: number) => {\n    return {\n        type: 'CREATE_MATRIX',\n        payload: {\n            tableSize\n        }\n    } as const\n}\ntype SetMatrixSizeACType = ReturnType<typeof setMatrixSizeAC>\nexport const setMatrixSizeAC = (size: number) => {\n    return {\n        type: 'SET_MATRIX_SIZE',\n        payload: {\n            size\n        }\n    } as const\n}\n\ntype SetStartCoordinatesACType = ReturnType<typeof setStartCoordinatesAC>\nexport const setStartCoordinatesAC = (matrixSize: number) => {\n    return {\n        type: 'SET_START_COORDINATES',\n        payload: {\n            matrixSize\n        }\n    } as const\n}\ntype GetPossibleMovesACType = ReturnType<typeof getPossibleMovesAC>\nexport const getPossibleMovesAC = (possibleMoves: Array<string>) => {\n    return {\n        type: 'GET_POSSIBLE_MOVES',\n        payload: {\n            possibleMoves\n        }\n    } as const\n}\n"],"mappings":"AAsBA,MAAMA,YAA8B,GAAG;EACnCC,MAAM,EAAE,EAD2B;EAEnCC,UAAU,EAAE,CAFuB;EAGnCC,UAAU,EAAE;IACRC,GAAG,EAAE,EADG;IAERC,GAAG,EAAE,CAAC,CAFE;IAGRC,MAAM,EAAE,CAAC;EAHD,CAHuB;EAQnCC,QAAQ,EAAE;IACNH,GAAG,EAAE,EADC;IAENC,GAAG,EAAE,CAAC,CAFA;IAGNC,MAAM,EAAE,CAAC;EAHH,CARyB;EAanCE,aAAa,EAAE;IACXC,UAAU,EAAE;MACRL,GAAG,EAAE,EADG;MAERC,GAAG,EAAE,CAAC,CAFE;MAGRC,MAAM,EAAE,CAAC;IAHD;EADD,CAboB,CAoBnC;EACA;EACA;EACA;EACA;;AAxBmC,CAAvC;AA2BA,OAAO,MAAMI,aAAa,GAAG,YAAmF;EAAA,IAAlFC,KAAkF,uEAAxDX,YAAwD;EAAA,IAA1CY,MAA0C;;EAC5G,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,eAAL;MAAsB;QAClB,IAAIZ,MAA4B,GAAG,EAAnC;;QACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,OAAP,CAAeC,SAAnC,EAA8CF,CAAC,EAA/C,EAAmD;UAC/Cb,MAAM,CAACgB,IAAP,CAAY,EAAZ;;UACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACG,OAAP,CAAeC,SAAnC,EAA8CE,CAAC,EAA/C,EAAmD;YAC/CjB,MAAM,CAACa,CAAD,CAAN,CAAUG,IAAV,CAAeC,CAAf;UACH;QACJ;;QACD,OAAO,EAAC,GAAGP,KAAJ;UAAWV;QAAX,CAAP;MACH;;IACD,KAAK,uBAAL;MAA8B;QAC1B,MAAMI,GAAG,GAAGc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,MAAM,CAACG,OAAP,CAAeb,UAAf,GAA4B,CAA7C,CAAX,CAAZ;QACA,MAAMI,MAAM,GAAGa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,MAAM,CAACG,OAAP,CAAeb,UAAf,GAA4B,CAA7C,CAAX,CAAf;QACA,OAAO,EACH,GAAGS,KADA;UAEHR,UAAU,EAAE,EAAC,GAAGQ,KAAK,CAACR,UAAV;YAAsBE,GAAtB;YAA2BC;UAA3B,CAFT;UAGHC,QAAQ,EAAE,EAAC,GAAGI,KAAK,CAACR,UAAV;YAAsBE,GAAtB;YAA2BC;UAA3B;QAHP,CAAP;MAKH;;IACD,KAAK,iBAAL;MAAwB;QACpB,IAAIM,MAAM,CAACG,OAAP,CAAeO,IAAf,GAAsB,CAA1B,EAA6B;UACzB,OAAO,EAAC,GAAGX,KAAJ;YAAWT,UAAU,EAAE;UAAvB,CAAP;QACH,CAFD,MAEO,IAAIU,MAAM,CAACG,OAAP,CAAeO,IAAf,GAAsB,CAA1B,EAA6B;UAChC,OAAO,EAAC,GAAGX,KAAJ;YAAWT,UAAU,EAAE;UAAvB,CAAP;QACH,CAFM,MAEA;UACH,OAAO,EAAC,GAAGS,KAAJ;YAAWT,UAAU,EAAEU,MAAM,CAACG,OAAP,CAAeO;UAAtC,CAAP;QACH;MACJ;;IACD,KAAK,oBAAL;MAA2B;QACvB,OAAO,EAAC,GAAGX,KAAJ;UAAWH,aAAa,EAAE;QAA1B,CAAP;MACH;;IACD;MACI,OAAOG,KAAP;EAjCR;AAmCH,CApCM;AA6CP,OAAO,MAAMY,cAAc,GAAIP,SAAD,IAAuB;EACjD,OAAO;IACHH,IAAI,EAAE,eADH;IAEHE,OAAO,EAAE;MACLC;IADK;EAFN,CAAP;AAMH,CAPM;AASP,OAAO,MAAMQ,eAAe,GAAIF,IAAD,IAAkB;EAC7C,OAAO;IACHT,IAAI,EAAE,iBADH;IAEHE,OAAO,EAAE;MACLO;IADK;EAFN,CAAP;AAMH,CAPM;AAUP,OAAO,MAAMG,qBAAqB,GAAIvB,UAAD,IAAwB;EACzD,OAAO;IACHW,IAAI,EAAE,uBADH;IAEHE,OAAO,EAAE;MACLb;IADK;EAFN,CAAP;AAMH,CAPM;AASP,OAAO,MAAMwB,kBAAkB,GAAIlB,aAAD,IAAkC;EAChE,OAAO;IACHK,IAAI,EAAE,oBADH;IAEHE,OAAO,EAAE;MACLP;IADK;EAFN,CAAP;AAMH,CAPM"},"metadata":{},"sourceType":"module"}